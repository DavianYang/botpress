name: Release
on:
  pull_request:
    branches:
      - 'release\/v[0-9]{1,3}_[0-9]{1,3}_[0-9]{1,3}'
      - 'main'
    types: ['*']
jobs:
  release:
    if: github.event.pull_request.merged == true
    name: Release botpress version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.1.0
        with:
          token: ${{ secrets.PAT_DOCKER }}
          submodules: true
      # Create an array of version to push to the Dockerhub registery
      - name: Deploy via Jenkins
        id: Deploy
        run: |
          VALID_RELEASE="^release\/v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$"  ## Will match Tags in the following format v123.231.123 or v1.2.3 will discard the following format v1.2.4-<revision>
          sudo apt-get update && sudo apt-get install jq
          HEAD_REF=${{github.head_ref}}
          BRANCH_LABEL=$(echo "${HEAD_REF#release\/}") # transform release/v12_12_12 to v12_12_12
          BRANCH_NAME=("${HEAD_REF/#/origin/}")
          HEADER_CRUMB=echo $(curl ${{secret.BUILD_CRUMB}} -u '${{secret.BUILD_USERNAME}}:${{secret.BUILD_TOKEN}}' | jq  -r '[.crumbRequestField,.crumb | tostring] | join(": ")')
          if [[ HEAD_REF =~ VALID_RELEASE ]]; then
            curl ${{secrets.BUILD_URL}}?delay=0sec \
            -u '${{secret.BUILD_USERNAME}}:${{secret.BUILD_TOKEN}}'
            -H 'Content-Type: application/x-www-form-urlencoded' \
            -H "${HEADER_CRUMB}"
            -d "name=separator-37500b00-1f20-4f64-94ec-7afd045bec6f&name=DEPLOY_TO_S3&value=on&name=DEPLOY_TO_DOCKERHUB&value=off&name=DEPLOY_DOCUMENTATION&value=on&name=CLEAN_BEFORE_BUILD&value=on&name=BUILD_TYPE&value=release&name=BUILD_LABEL&value=${BRANCH_LABEL}&name=separator-5be33bf7-d9f5-486d-af56-d3458fbf99de&name=BRANCH&value=${BRANCH_NAME}&quickFilter=&statusCode=303&Submit=Build"
          fi
